diff --git a/src/pGroupCohomology/factory.py b/src/pGroupCohomology/factory.py
index 19c4e5b..6e1daaa 100644
--- a/pGroupCohomology/factory.py
+++ b/pGroupCohomology/factory.py
@@ -523,14 +523,8 @@ class CohomologyRingFactory:
 
             sage: from pGroupCohomology import CohomologyRing
             sage: CohomologyRing.reset()
-            sage: try:
-            ....:     from sage.env import SAGE_SHARE
-            ....: except ImportError:
-            ....:     try:
-            ....:         from sage.misc.misc import SAGE_SHARE
-            ....:     except ImportError:
-            ....:         from sage.misc.misc import SAGE_DATA as SAGE_SHARE
-            sage: CohomologyRing.get_local_sources().startswith(os.path.realpath(SAGE_SHARE))
+            sage: from sage.env import DOT_SAGE
+            sage: CohomologyRing.get_local_sources().startswith(os.path.realpath(DOT_SAGE))
             True
             sage: tmp = tmp_dir()
             sage: CohomologyRing.set_local_sources(tmp)
@@ -575,7 +569,7 @@ class CohomologyRingFactory:
           cohomology data, but all new computations will still be done in
           the user's workspace.
         - If ``folder`` is ``True`` then the default location of the local
-          sources is reset; this is a sub-directory of ``SAGE_SHARE``.
+          sources is reset; this is a sub-directory of ``DOT_SAGE``.
         - If ``bool(folder)`` is ``False`` then the user's workspace will
           be used to create new data in subsequent computations, even if
           the user has write permission for the local sources.
@@ -609,22 +603,16 @@ class CohomologyRingFactory:
         ``CohomologyRing.set_local_sources(True)`` does::
 
             sage: CohomologyRing.set_local_sources(True)
-            sage: from sage.env import SAGE_SHARE
-            sage: CohomologyRing.get_local_sources().startswith(os.path.realpath(SAGE_SHARE))
+            sage: from sage.env import DOT_SAGE
+            sage: CohomologyRing.get_local_sources().startswith(os.path.realpath(DOT_SAGE))
             True
 
         """
         if folder:
             self._create_local_sources = True
             if not isinstance(folder, (str,unicode)):
-                try:
-                    from sage.env import SAGE_SHARE
-                except ImportError:
-                    try:
-                        from sage.misc.misc import SAGE_SHARE
-                    except ImportError:
-                        from sage.misc.misc import SAGE_DATA as SAGE_SHARE
-                folder = os.path.realpath(os.path.join(SAGE_SHARE,'pGroupCohomology'))
+                from sage.env import DOT_SAGE
+                folder = os.path.realpath(os.path.join(DOT_SAGE,'pGroupCohomology'))
             else:
                 folder = os.path.realpath(str(folder))
             if os.path.exists(folder):
@@ -1067,7 +1055,7 @@ class CohomologyRingFactory:
         if not isinstance(R, COHO):
             raise TypeError('The second argument must be a Cohomology ring')
         if self._create_local_sources:
-            root_workspace = COHO.local_sources # SAGE_SHARE+'pGroupCohomology'
+            root_workspace = COHO.local_sources # DOT_SAGE+'pGroupCohomology'
         else:
             root_workspace = COHO.workspace #DOT_SAGE+'pGroupCohomology/db/'
         # test if R is compatible with the key CacheKey.
@@ -1297,7 +1285,7 @@ class CohomologyRingFactory:
         from pGroupCohomology.auxiliaries import gap
         coho_logger.info('We compute this cohomology ring from scratch', None)
         if self._create_local_sources:
-            root_workspace = COHO.local_sources # SAGE_SHARE+'pGroupCohomology'
+            root_workspace = COHO.local_sources # DOT_SAGE+'pGroupCohomology'
         else:
             root_workspace = COHO.workspace #DOT_SAGE+'pGroupCohomology/db/'
         CacheKey = (KEY, os.path.join(root_workspace,GStem,'dat','State'))
@@ -1377,7 +1365,7 @@ class CohomologyRingFactory:
         """
         root_local_sources = COHO.local_sources
         if self._create_local_sources:
-            root_workspace = COHO.local_sources # SAGE_SHARE+'pGroupCohomology'
+            root_workspace = COHO.local_sources # DOT_SAGE+'pGroupCohomology'
         else:
             root_workspace = COHO.workspace #DOT_SAGE+'pGroupCohomology/db/'
         file_name = 'H%smod%d.sobj'%(GStem,pr)
@@ -1698,7 +1686,7 @@ class CohomologyRingFactory:
         global coho_options
         root_local_sources = COHO.local_sources
         if self._create_local_sources:
-            root_workspace = COHO.local_sources # SAGE_SHARE+'pGroupCohomology'
+            root_workspace = COHO.local_sources # DOT_SAGE+'pGroupCohomology'
         else:
             root_workspace = COHO.workspace #DOT_SAGE+'pGroupCohomology/db/'
         # Basic idea:
